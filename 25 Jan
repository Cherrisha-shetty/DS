#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node* next;
};

struct node *front = NULL;
struct node *rear = NULL;

void enqueue()
{
    int d;
    struct node* n;
    n=(struct node*)malloc(sizeof(struct node));
    n->data = d;
    n->next = NULL;
    if((rear==NULL) && (front==NULL))
	{
	    front = rear = n;
	    rear->next = front;
	}
	else
	{
		rear->next = n;
		rear = n;
		n->next = front;
	}
    
}

void dequeue()
{
    struct node* m;
    m = front;
	if((front==NULL) && (rear==NULL))
	{
	    printf("\nQueue is Empty");
	}
	else if(front == rear)
	{
	    front = rear = NULL;
	    free(m);
	}
	else
	{
	    front = front->next;
	    rear->next = front;
	    free(m);
	}
}

void display()
{ 
	struct node* m;
	m = front;
	if((front==NULL) && (rear==NULL))
	{
	    printf("\nQueue is Empty");
	}
	else{
		do
		{
		    printf("\n%d",m->data);
		    m = m->next;
		}
		while(m != front);
	}
}

int main()
{
	int choice,n,i,data;
	printf("Enter Your Choice");
	do{
		printf("\n1 Enqueue \n2 Dequeue \n3 Display \n4 Exit");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1:
				printf("\nEnter number");
				scanf("%d",&n);
				printf("\nEnter value to enqueue");
				i=0;
				while(i<n)
				{
					scanf("%d",&data);
					enqueue(data);
					i++;
				}
				break;
			case 2:
				dequeue();
				break;
			case 3:
				display();
				break;
			case 4:
				exit(0);
			default:
				printf("\nIncorrect Choice");
			
		}
	}while(choice!=0);
return 0;
}
